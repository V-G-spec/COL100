(* Question 1 *)

fun high1(a,b,iden,succ1,oper1,oper2,t,k)=
	if a>b then iden
	else high1(succ1(a),b,oper1(t,iden),succ1,oper1,oper2,oper2(t,k,a),k);

fun perfect(n)=
	let
		fun succ1(a)=
			let fun iter(i)=
				if (n mod i=0) then i
				else iter(i+1)
			in iter(a+1)
			end;
	in (n=high1(1,n div 2,0,succ1,op+,fn (a,b,c)=>succ1(a),1,n))
	end;	

fun ex(x,n) = 
	let
		fun term(a:real,b,c) = a*real(b)/real(c);
	in	
		high1(1,n,0.0,fn x=> x+1,op+,term,1.0,x)
	end;








(*Question 2*)


fun high(a,b,succ1,oper,f,iden,r,succ2)=
	if a>b orelse r>b then iden
	else oper(  f(a,r) , high(succ1(a),b,succ1,oper,f,iden,succ2(r),succ2)  );

fun sum(a,b,c,d,f)=
	let
		fun term(i,c,d,f)= high(i,d,fn x=>x,op+,f,0,c,fn x=> x+1)
	in high(a,b,fn x=>x+1,op+,fn (x,y)=>term(x,c,d,f),0,0,fn x=>x)
	end;






(*Question 3*)

fun mini(a:real,b:real,c:real,d:real)=
	let
		val ls=[a,b,c,d];
		fun sort([x])=[x]
			|sort(x::y::ls)=
				if x<y then x::sort(y::ls)
				else y::sort(x::ls)
	in List.nth(sort(ls),0)
	end;
	fun maxi(a:real,b:real,c:real,d:real)=
	let
		val ls=[a,b,c,d];
		fun sort([x])=[x]
			|sort(x::y::ls)=
				if x<y then x::sort(y::ls)
				else y::sort(x::ls)
	in List.nth(sort(ls),3)	
	end;
		

fun make_interval(x:real,y:real)= 

	if x<y then (x,y)
	else (y,x);	



fun intadd((a,b),(c,d))= make_interval(a+c,b+d);



fun intsubtract((a,b),(c,d))= make_interval(a-c,b-d);



fun intmult((a,b),(c,d))=
		let 
		val x=mini(b*c,a*c,a*d,b*d);
		val y=maxi(b*c,a*c,a*d,b*d);
	in make_interval(x,y)
	end;


fun intdiv((a,b),(c,d)) = 
	
	if Real.==(c,0.0) andalso Real.!=(d,0.0) then intmult((a,b),(1.0/d,Real.posInf))
	else if Real.==(d,0.0)  andalso Real.!=(c,0.0) then intmult((a,b),(Real.negInf,1.0/c))
	else if Real.==(c,0.0) andalso Real.==(d,0.0) then intmult((a,b),(Real.negInf,Real.posInf))
	else intmult((a,b),(1.0/c,1.0/d));






(*Question 4*)


exception Limit_Tends_To_1

fun high(a, iden, succ1, oper1, succ2, t, oper2)=
	if a=0 then iden
	else if (a mod 2 =0) then high(succ1(a), oper2(t,iden), succ1, oper1, succ2, succ2(t), oper2)
	else high(succ1(a), oper1(t, iden), succ1, oper1, succ2, succ2(t), oper2);

fun mult(a,b)=
	high(b, 0, fn x=> x div 2, fn (x,y)=>x+y, fn x=>2*x, a, fn (x,y)=>y);



fun fast_pow(x,n)=
	if x=0 andalso n=0 then raise Limit_Tends_To_1
	else high(n, 1, fn k=> k div 2, op*, fn a=>a*a, x, fn (x,y)=>y);

fun lb(x,_)=x;
fun ub(_,y)=y;


fun divide(x,y)=
	let
	fun oper1(c,(a,b))= 
		if (2*(ub(a,b))+1<y) then (2*(lb(a,b)),2*(ub(a,b)) + 1) else (2*(lb(a,b))+1,2*(ub(a,b)) + 1 -y)
	fun oper2(c,(a,b))= 
		if (2*(ub(a,b))<y) then   (2*(lb(a,b)),2*(ub(a,b))) else (2*(lb(a,b)) + 1,2*(ub(a,b)) - y)
	in high(x, (0,0), fn l=> l div 2, oper1, fn l=> l div 2, x, oper2)
	end;